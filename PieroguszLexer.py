# Generated from Pierogusz.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,113,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,
        1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,
        1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,
        11,1,11,5,11,76,8,11,10,11,12,11,79,9,11,1,12,4,12,82,8,12,11,12,
        12,12,83,1,13,4,13,87,8,13,11,13,12,13,88,1,13,1,13,5,13,93,8,13,
        10,13,12,13,96,9,13,1,14,1,14,5,14,100,8,14,10,14,12,14,103,9,14,
        1,14,1,14,1,15,4,15,108,8,15,11,15,12,15,109,1,15,1,15,0,0,16,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,1,0,5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
        97,122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,13,32,32,118,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,1,33,1,0,0,0,3,37,1,0,0,0,5,39,1,0,0,0,7,45,1,0,0,0,9,52,
        1,0,0,0,11,58,1,0,0,0,13,63,1,0,0,0,15,65,1,0,0,0,17,67,1,0,0,0,
        19,69,1,0,0,0,21,71,1,0,0,0,23,73,1,0,0,0,25,81,1,0,0,0,27,86,1,
        0,0,0,29,97,1,0,0,0,31,107,1,0,0,0,33,34,5,105,0,0,34,35,5,110,0,
        0,35,36,5,116,0,0,36,2,1,0,0,0,37,38,5,59,0,0,38,4,1,0,0,0,39,40,
        5,102,0,0,40,41,5,108,0,0,41,42,5,111,0,0,42,43,5,97,0,0,43,44,5,
        116,0,0,44,6,1,0,0,0,45,46,5,115,0,0,46,47,5,116,0,0,47,48,5,114,
        0,0,48,49,5,105,0,0,49,50,5,110,0,0,50,51,5,103,0,0,51,8,1,0,0,0,
        52,53,5,112,0,0,53,54,5,114,0,0,54,55,5,105,0,0,55,56,5,110,0,0,
        56,57,5,116,0,0,57,10,1,0,0,0,58,59,5,114,0,0,59,60,5,101,0,0,60,
        61,5,97,0,0,61,62,5,100,0,0,62,12,1,0,0,0,63,64,5,61,0,0,64,14,1,
        0,0,0,65,66,5,43,0,0,66,16,1,0,0,0,67,68,5,45,0,0,68,18,1,0,0,0,
        69,70,5,42,0,0,70,20,1,0,0,0,71,72,5,47,0,0,72,22,1,0,0,0,73,77,
        7,0,0,0,74,76,7,1,0,0,75,74,1,0,0,0,76,79,1,0,0,0,77,75,1,0,0,0,
        77,78,1,0,0,0,78,24,1,0,0,0,79,77,1,0,0,0,80,82,7,2,0,0,81,80,1,
        0,0,0,82,83,1,0,0,0,83,81,1,0,0,0,83,84,1,0,0,0,84,26,1,0,0,0,85,
        87,7,2,0,0,86,85,1,0,0,0,87,88,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,
        0,89,90,1,0,0,0,90,94,5,46,0,0,91,93,7,2,0,0,92,91,1,0,0,0,93,96,
        1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,95,28,1,0,0,0,96,94,1,0,0,0,
        97,101,5,34,0,0,98,100,8,3,0,0,99,98,1,0,0,0,100,103,1,0,0,0,101,
        99,1,0,0,0,101,102,1,0,0,0,102,104,1,0,0,0,103,101,1,0,0,0,104,105,
        5,34,0,0,105,30,1,0,0,0,106,108,7,4,0,0,107,106,1,0,0,0,108,109,
        1,0,0,0,109,107,1,0,0,0,109,110,1,0,0,0,110,111,1,0,0,0,111,112,
        6,15,0,0,112,32,1,0,0,0,7,0,77,83,88,94,101,109,1,6,0,0
    ]

class PieroguszLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    ID = 12
    INT = 13
    FLOAT = 14
    STRING = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "';'", "'float'", "'string'", "'print'", "'read'", 
            "'='", "'+'", "'-'", "'*'", "'/'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "FLOAT", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "ID", "INT", "FLOAT", 
                  "STRING", "WS" ]

    grammarFileName = "Pierogusz.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


